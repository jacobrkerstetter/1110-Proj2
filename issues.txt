each block is not 1 byte, compute cache size with this

fill with block size # of random #s from 0 to 256

print hit or miss for each read

miss in L1 hit in L2 --> load info into L1

write into first empty block in set
take largest multiple of block size that is bigger AND smaller than i ie (with block size 32 --> 35 goes to 32 low and 64 higher)
block.data = [] of blocksize bytes

write-back miss needs to write data passed in

if arrival time < program latency, arrival time = program latency
else arrival time = arrival time